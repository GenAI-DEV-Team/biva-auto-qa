"""initial tables

Revision ID: 5c0feb1ac6ac
Revises: 
Create Date: 2025-09-29 13:47:14.831884

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5c0feb1ac6ac'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bot_index', sa.Integer(), nullable=False, comment='External bot ID managed by user'),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bot_bot_index', 'bots', ['bot_index'], unique=False)
    op.create_index('idx_bot_created_at', 'bots', ['created_at'], unique=False)
    op.create_index(op.f('ix_bots_bot_index'), 'bots', ['bot_index'], unique=True)
    op.create_index(op.f('ix_bots_created_at'), 'bots', ['created_at'], unique=False)
    op.create_table('evaluations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.Text(), nullable=False),
    sa.Column('memory', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('evaluation_result', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('reviewed', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('review_note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_evaluation_conversation_id', 'evaluations', ['conversation_id'], unique=False)
    op.create_index('idx_evaluation_created_at', 'evaluations', ['created_at'], unique=False)
    op.create_index(op.f('ix_evaluations_conversation_id'), 'evaluations', ['conversation_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('bot_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bot_index', sa.Integer(), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('knowledge_base', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['bot_index'], ['bots.bot_index'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bot_version_bot_index', 'bot_versions', ['bot_index'], unique=False)
    op.create_index('idx_bot_version_created_at', 'bot_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_bot_versions_bot_index'), 'bot_versions', ['bot_index'], unique=False)
    op.create_table('user_prompts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_prompt_updated_at', 'user_prompts', ['updated_at'], unique=False)
    op.create_index('idx_user_prompt_user_id', 'user_prompts', ['user_id'], unique=True)
    op.create_index(op.f('ix_user_prompts_user_id'), 'user_prompts', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_prompts_user_id'), table_name='user_prompts')
    op.drop_index('idx_user_prompt_user_id', table_name='user_prompts')
    op.drop_index('idx_user_prompt_updated_at', table_name='user_prompts')
    op.drop_table('user_prompts')
    op.drop_index(op.f('ix_bot_versions_bot_index'), table_name='bot_versions')
    op.drop_index('idx_bot_version_created_at', table_name='bot_versions')
    op.drop_index('idx_bot_version_bot_index', table_name='bot_versions')
    op.drop_table('bot_versions')
    op.drop_table('users')
    op.drop_index(op.f('ix_evaluations_conversation_id'), table_name='evaluations')
    op.drop_index('idx_evaluation_created_at', table_name='evaluations')
    op.drop_index('idx_evaluation_conversation_id', table_name='evaluations')
    op.drop_table('evaluations')
    op.drop_index(op.f('ix_bots_created_at'), table_name='bots')
    op.drop_index(op.f('ix_bots_bot_index'), table_name='bots')
    op.drop_index('idx_bot_created_at', table_name='bots')
    op.drop_index('idx_bot_bot_index', table_name='bots')
    op.drop_table('bots')
    # ### end Alembic commands ###
